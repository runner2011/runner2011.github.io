"use strict";(self.webpackChunkrunn2011blog=self.webpackChunkrunn2011blog||[]).push([[3524],{1709:(e,t,n)=>{n.d(t,{l:()=>l});const l=JSON.parse('{"category":{"/":{"path":"/category/","map":{}}},"tag":{"/":{"path":"/tag/","map":{"AI_GEN":{"path":"/tag/ai-gen/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]},"stars":{"path":"/tag/stars/","indexes":[16]}}}}}')},2878:(e,t,n)=>{n.d(t,{P:()=>l});const l={}},3429:(e,t,n)=>{n.d(t,{B:()=>j});var l={};n.r(l),n.d(l,{default:()=>A});var a={};n.r(a);var r={};n.r(r);var i={};n.r(i);var o={};n.r(o),n.d(o,{default:()=>u});var s={};n.r(s),n.d(s,{default:()=>y});var E={};n.r(E);var p={};n.r(p);var d={};n.r(d),n.d(d,{default:()=>F});var h={};n.r(h),n.d(h,{default:()=>w});var c={};n.r(c),n.d(c,{default:()=>q});var m=n(5579);const A={enhance:({app:e})=>{e.component("GitContributors",m.B)}};var B=n(3349),g=n(1781),b=n(9212);const u={enhance:({app:e})=>{e.component("CodeTabs",g.S),e.component("Tabs",b.t)}};var x=n(2996),C=n(3027);const y={enhance:({app:e})=>{e.component("CodeDemo",x.A),e.component("MdDemo",C.A)}};var f=n(2417),G=n(355),_=n(457),P=n(4764),O=n(7786),v=n(641),D=n(307);const F={enhance:({app:e})=>{(0,P.L)("VPIcon")||e.component("VPIcon",(e=>(0,v.h)(D.G,{type:"iconify",prefix:"fa6-solid:",...e})))},setup:()=>{(0,O.r9V)("https://cdn.jsdelivr.net/npm/iconify-icon@2")}};var T=n(840),I=n(596),N=n(8831);n(2771);const w={enhance:({app:e})=>{(0,P.L)("Badge")||e.component("Badge",I.A),(0,P.L)("VPCard")||e.component("VPCard",N.A)},setup:()=>{},rootComponents:[]};var L=n(6358),M=n(3827),S=n(1599),k=n(4546),U=n(4139),J=n(4135),V=n(9122),R=n(8465),z=n(9175),H=n(1109);n(2461),n(6829),n(6828),n(3248),(0,R.M_)((e=>{const t=e.title,n=e.index??!0,l=e.icon;return n?{title:t,content:l?()=>[(0,v.h)((0,v.g2)("VPIcon"),{icon:l,sizing:"both"}),t]:null,order:e.order,index:e.index}:null}));const q={enhance:({app:e,router:t})=>{const{scrollBehavior:n}=t.options;t.options.scrollBehavior=async(...e)=>(await U.s.wait(),n(...e)),(0,J.i)(e),e.component("BloggerInfo",z.l),e.component("SocialMedias",z.k)},setup:()=>{(0,J.s)(),(0,J.a)(),(0,H.su)()},layouts:{Layout:V.L,NotFound:V.N,Blog:z.B}},j=[l,a,r,i,B,o,s,E,p,f,G,_,d,T,h,L,M,S,k,c].map((e=>e.default)).filter(Boolean)},3781:(e,t,n)=>{n.d(t,{U:()=>l});const l=JSON.parse('{"article":{"/":{"path":"/article/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}},"star":{"/":{"path":"/star/","indexes":[]}},"timeline":{"/":{"path":"/timeline/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}}}')},4776:(e,t,n)=>{n.d(t,{M:()=>l});const l=JSON.parse('["/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/Map(%E6%98%A0%E5%B0%84)%E5%92%8CSet(%E9%9B%86%E5%90%88).html","/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%EF%BC%8C%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81.html","/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E5%A0%86.html","/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20(ADT).html","/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%EF%BC%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html","/posts/Game%20AI/placeholder.html","/posts/Gameplay/placeholder.html","/posts/Animation/%E6%B8%B8%E6%88%8F%E5%8A%A8%E7%94%BB%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/placeholder.html","/posts/Graphics/LearnOpenGL/placeholder.html","/posts/Other/Math/placeholder.html","/posts/Other/%E5%B7%A5%E4%BD%9C%E7%94%9F%E6%B4%BB/placeholder.html","/posts/Other/%E6%B8%B8%E6%88%8F/placeholder.html","/posts/Programming/C_/placeholder.html","/posts/Programming/C__/placeholder.html","/posts/Unreal%20Engine/%E4%BC%98%E5%8C%96/placeholder.html","/posts/Unreal%20Engine/%E5%AD%A6%E4%B9%A0/placeholder.html","/posts/runner2011/blog1.html"]')},4923:(e,t,n)=>{},6653:(e,t,n)=>{n.d(t,{K:()=>l});const l=JSON.parse('{"encrypt":{},"author":{"name":"Runner2011","url":"https://runner2011.github.io"},"logo":"/.vuepress/public/logo.svg","docsDir":"src","footer":"默认页脚","displayFooter":true,"blog":{"description":""},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routerLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/"],"sidebar":{"/":["",{"text":"文章","icon":"book","prefix":"posts/","children":"structure"}]}}}}')},8123:(e,t,n)=>{n.d(t,{v:()=>l});const l={"/posts/":[{text:"Animation",prefix:"Animation/",collapsible:!0,children:[{text:"游戏动画技术学习",prefix:"游戏动画技术学习/",collapsible:!0,children:["placeholder"]}]},{text:"Game AI",prefix:"Game AI/",collapsible:!0,children:["placeholder"]},{text:"Gameplay",prefix:"Gameplay/",collapsible:!0,children:["placeholder"]},{text:"Graphics",prefix:"Graphics/",collapsible:!0,children:[{text:"Learn Open GL",prefix:"LearnOpenGL/",collapsible:!0,children:["placeholder"]}]},{text:"Other",prefix:"Other/",collapsible:!0,children:[{text:"Math",prefix:"Math/",collapsible:!0,children:["placeholder"]},{text:"工作生活",prefix:"工作生活/",collapsible:!0,children:["placeholder"]},{text:"游戏",prefix:"游戏/",collapsible:!0,children:["placeholder"]}]},{text:"Programming",prefix:"Programming/",collapsible:!0,children:[{text:"C#",prefix:"C_/",collapsible:!0,children:["/posts/Programming/C_/placeholder.html"]},{text:"C++",prefix:"C__/",collapsible:!0,children:["/posts/Programming/C__/placeholder.html"]}]},{text:"Runner2011",prefix:"runner2011/",collapsible:!0,children:["blog1"]},{text:"Unreal Engine",prefix:"Unreal Engine/",collapsible:!0,children:[{text:"优化",prefix:"优化/",collapsible:!0,children:["placeholder"]},{text:"学习",prefix:"学习/",collapsible:!0,children:["placeholder"]}]},{text:"计算机基础",prefix:"计算机基础/",collapsible:!0,children:[{text:"数据结构算法",prefix:"数据结构算法/",collapsible:!0,children:["Map(映射)和Set(集合)","哈夫曼树，哈夫曼编码","堆","抽象数据结构 (ADT)","贪心算法，动态规划"]}]}]}},8164:(e,t,n)=>{n.d(t,{J:()=>a,c:()=>l});const l=JSON.parse('{"/posts/Programming/C#/placeholder.html":"/posts/Programming/C_/placeholder.html","/posts/Programming/C++/placeholder.html":"/posts/Programming/C__/placeholder.html"}'),a=Object.fromEntries([["/",{loader:()=>n.e(4470).then(n.bind(n,9908)),meta:{title:"博客主页"}}],["/posts/Game%20AI/placeholder.html",{loader:()=>n.e(7656).then(n.bind(n,5823)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/Gameplay/placeholder.html",{loader:()=>n.e(9154).then(n.bind(n,8501)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/runner2011/blog1.html",{loader:()=>n.e(9370).then(n.bind(n,8840)),meta:{date:1749313517e3,tag:["stars"],excerpt:"\n<h2>Idle Animations</h2>\n<p>一共有三种方式</p>\n<ul>\n<li>\n<p>State machine，通过transition切换 （transition带有blend animation）</p>\n</li>\n<li>\n<p>BlendPoses (with int or with Enums)</p>\n<ul>\n<li>switch select by value 来选择动画</li>\n</ul>\n</li>\n<li>\n<p>use dynamic sequence with onUpdate data binding to update sequence to play. and use inerialization to blend with sequences.</p>\n</li>\n</ul>",readingTime:{minutes:.3,words:91},title:"博客test",type:"article"}}],["/posts/Animation/%E6%B8%B8%E6%88%8F%E5%8A%A8%E7%94%BB%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/placeholder.html",{loader:()=>n.e(4930).then(n.bind(n,4467)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/Graphics/LearnOpenGL/placeholder.html",{loader:()=>n.e(2509).then(n.bind(n,5040)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/Other/Math/placeholder.html",{loader:()=>n.e(5483).then(n.bind(n,7339)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/Other/%E5%B7%A5%E4%BD%9C%E7%94%9F%E6%B4%BB/placeholder.html",{loader:()=>n.e(7382).then(n.bind(n,3296)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/Other/%E6%B8%B8%E6%88%8F/placeholder.html",{loader:()=>n.e(7448).then(n.bind(n,7120)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/Programming/C_/placeholder.html",{loader:()=>n.e(5770).then(n.bind(n,3082)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/Programming/C__/placeholder.html",{loader:()=>n.e(7737).then(n.bind(n,425)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/Unreal%20Engine/%E4%BC%98%E5%8C%96/placeholder.html",{loader:()=>n.e(3936).then(n.bind(n,7004)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/Unreal%20Engine/%E5%AD%A6%E4%B9%A0/placeholder.html",{loader:()=>n.e(1432).then(n.bind(n,3090)),meta:{date:1749318588e3,tag:["AI_GEN"],excerpt:"\n",readingTime:{minutes:.01,words:3},title:"Placeholder",type:"article"}}],["/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/Map(%E6%98%A0%E5%B0%84)%E5%92%8CSet(%E9%9B%86%E5%90%88).html",{loader:()=>n.e(3003).then(n.bind(n,3206)),meta:{date:1749351682e3,tag:["AI_GEN"],excerpt:'\n<p>简单说：</p>\n<p>哈希表实现Map通过哈希函数将键（key）映射到一个哈希值（通常是数组索引），在对应索引位置存储键值对（key-value pair）。如果发生哈希冲突（多个键映射到同一索引），通常通过链表或红黑树（Java 8+）解决。</p>\n<p>哈希表实现 Set 的方式类似 Map，但只存储元素（相当于 Map 的键），没有值（value）</p>\n<hr>\n<p>在数据结构中，Map 和 Set 是两种常见的高级数据结构，通常用于存储和操作数据。以下是它们的主要区别，用简洁的方式说明：</p>\n<p>1. 定义</p>\n<ul>\n<li>\n<p>Map：键值对（key-value pair）的集合，键是唯一的，值可以重复。用于存储键到值的映射关系。</p>\n<ul>\n<li>示例：{"name": "Alice", "age": 25}，键是 "name" 和 "age"，值是 "Alice" 和 25。</li>\n</ul>\n</li>\n<li>\n<p>Set：唯一元素的集合，无键值对概念，元素不可重复。</p>\n<ul>\n<li>示例：{1, 2, 3}，每个元素只出现一次。</li>\n</ul>\n</li>\n</ul>',readingTime:{minutes:7.66,words:2298},title:"Map(映射)和Set(集合)",type:"article"}}],["/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%EF%BC%8C%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81.html",{loader:()=>n.e(4787).then(n.bind(n,6456)),meta:{date:1749351682e3,tag:["AI_GEN"],excerpt:"\n<p>哈夫曼编码：熵编码</p>\n<h1>前情：</h1>\n<p>熵：有序，熵低，无序，熵高。熵低，信息量更少，更容易表示，熵高，信息量高，更难表示。</p>\n<h1>核心：</h1>\n<p>1.计算熵（计算高频，低频）。高频，用短编码表示，低频，长编码表示。</p>\n<p>2.根据熵信息，编码。</p>\n<h1>TODO</h1>\n<h2>哈夫曼树生成规则？</h2>\n",readingTime:{minutes:.32,words:96},title:"哈夫曼树，哈夫曼编码",type:"article"}}],["/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E5%A0%86.html",{loader:()=>n.e(2945).then(n.bind(n,1955)),meta:{date:1749351682e3,tag:["AI_GEN"],excerpt:"\n<p>Q:所以不管什么堆，一定要满足的性质是什么？</p>\n<p>不管是什么类型的堆（如二叉堆、d-堆、斐波那契堆等），都必须满足的核心性质是堆性质（Heap Property）。具体来说：</p>\n<ol>\n<li>\n<p>最大堆（Max-Heap）：</p>\n<ul>\n<li>每个父节点的值大于或等于其子节点的值。</li>\n</ul>\n</li>\n<li>\n<p>最小堆（Min-Heap）：</p>\n<ul>\n<li>每个父节点的值小于或等于其子节点的值。</li>\n</ul>\n</li>\n</ol>\n<p>关键点</p>\n<ul>\n<li>堆性质是堆的定义核心，确保堆可以高效地维护和访问最大值（最大堆）或最小值（最小堆），通常通过根节点直接获取（O(1) 时间）。</li>\n<li>无论堆的结构如何（完全二叉树、d-叉树、还是斐波那契堆的树集合），堆性质必须在所有父子节点关系中成立。</li>\n<li>不同类型的堆（如二叉堆、d-堆、斐波那契堆）在结构（如是否为完全二叉树）和操作效率（如插入、删除、减少键值）上有所不同，但堆性质是通用的。</li>\n</ul>",readingTime:{minutes:1.36,words:409},title:"堆",type:"article"}}],["/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%20(ADT).html",{loader:()=>n.e(9566).then(n.bind(n,9972)),meta:{date:1749351682e3,tag:["AI_GEN"],excerpt:"\n<p>Q:抽象数据结构有哪些？</p>\n<p>A （runner2011):简言之，数据结构课程学的数据结构都是ADT. 只是也教了具体实现。</p>\n<p>好问题！我们来认真梳理一下常见的<strong>抽象数据结构（Abstract Data Types）</strong>。它们是程序设计中用来组织、管理和存储数据的方式，和具体实现（比如数组、链表、哈希表、红黑树）相对，抽象数据结构强调<strong>对数据和操作的抽象定义</strong>，不关心底层实现细节。</p>\n<hr>\n<h2>📚 常见抽象数据结构分类</h2>\n<h3>📦 线性结构</h3>\n<p>数据元素之间是<strong>一对一线性关系</strong></p>",readingTime:{minutes:4.14,words:1241},title:"抽象数据结构 (ADT)",type:"article"}}],["/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%EF%BC%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html",{loader:()=>n.e(5363).then(n.bind(n,9800)),meta:{date:1749351682e3,tag:["AI_GEN"],excerpt:'\n<ul>\n<li><strong>贪心算法</strong>：像一个人爬山，每次都选最陡的路，可能错过真正的顶峰。</li>\n<li><strong>动态规划</strong>：像一群人分头探索所有路径，最后汇总最优路线</li>\n</ul>\n<p>动态规划：计算每一个子问题，并记录子问题的结果</p>\n<p>贪心算法：每次取最解决的结果，一条路走到黑</p>\n<h1>性能</h1>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">维度</th>\n<th style="text-align:left">贪心算法</th>\n<th style="text-align:left">动态规划</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left"><strong>时间效率</strong></td>\n<td style="text-align:left">快（<code>O(amount)</code>）</td>\n<td style="text-align:left">慢（<code>O(amount × coin_types)</code>）</td>\n</tr>\n<tr>\n<td style="text-align:left"><strong>空间效率</strong></td>\n<td style="text-align:left">低（<code>O(1)</code>）</td>\n<td style="text-align:left">高（<code>O(amount)</code>）</td>\n</tr>\n<tr>\n<td style="text-align:left"><strong>解的质量</strong></td>\n<td style="text-align:left">可能非最优（如&nbsp;<code>4,1,1</code>）</td>\n<td style="text-align:left">保证最优（如&nbsp;<code>3,3</code>）</td>\n</tr>\n<tr>\n<td style="text-align:left"><strong>适用场景</strong></td>\n<td style="text-align:left">问题满足贪心性质时</td>\n<td style="text-align:left">通用性强，但需要更多计算</td>\n</tr>\n</tbody>\n</table>',readingTime:{minutes:.6,words:179},title:"贪心算法，动态规划",type:"article"}}],["/404.html",{loader:()=>n.e(7490).then(n.bind(n,1489)),meta:{title:""}}],["/posts/Game%20AI/",{loader:()=>n.e(9077).then(n.bind(n,2609)),meta:{title:"Game AI"}}],["/posts/",{loader:()=>n.e(8666).then(n.bind(n,8063)),meta:{title:"Posts"}}],["/posts/Gameplay/",{loader:()=>n.e(1495).then(n.bind(n,3619)),meta:{title:"Gameplay"}}],["/posts/runner2011/",{loader:()=>n.e(9321).then(n.bind(n,4881)),meta:{title:"Runner2011"}}],["/posts/Animation/%E6%B8%B8%E6%88%8F%E5%8A%A8%E7%94%BB%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/",{loader:()=>n.e(9943).then(n.bind(n,5993)),meta:{title:"游戏动画技术学习"}}],["/posts/Animation/",{loader:()=>n.e(5903).then(n.bind(n,415)),meta:{title:"Animation"}}],["/posts/Graphics/LearnOpenGL/",{loader:()=>n.e(1080).then(n.bind(n,6842)),meta:{title:"Learn Open GL"}}],["/posts/Graphics/",{loader:()=>n.e(2).then(n.bind(n,9656)),meta:{title:"Graphics"}}],["/posts/Other/Math/",{loader:()=>n.e(3654).then(n.bind(n,6562)),meta:{title:"Math"}}],["/posts/Other/",{loader:()=>n.e(8519).then(n.bind(n,2416)),meta:{title:"Other"}}],["/posts/Other/%E5%B7%A5%E4%BD%9C%E7%94%9F%E6%B4%BB/",{loader:()=>n.e(3875).then(n.bind(n,8425)),meta:{title:"工作生活"}}],["/posts/Other/%E6%B8%B8%E6%88%8F/",{loader:()=>n.e(4277).then(n.bind(n,684)),meta:{title:"游戏"}}],["/posts/Programming/C_/",{loader:()=>n.e(4671).then(n.bind(n,6106)),meta:{title:"C"}}],["/posts/Programming/",{loader:()=>n.e(5628).then(n.bind(n,4718)),meta:{title:"Programming"}}],["/posts/Programming/C__/",{loader:()=>n.e(7532).then(n.bind(n,3455)),meta:{title:"C"}}],["/posts/Unreal%20Engine/%E4%BC%98%E5%8C%96/",{loader:()=>n.e(3725).then(n.bind(n,1375)),meta:{title:"优化"}}],["/posts/Unreal%20Engine/",{loader:()=>n.e(8606).then(n.bind(n,165)),meta:{title:"Unreal Engine"}}],["/posts/Unreal%20Engine/%E5%AD%A6%E4%B9%A0/",{loader:()=>n.e(2453).then(n.bind(n,826)),meta:{title:"学习"}}],["/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/",{loader:()=>n.e(4055).then(n.bind(n,8104)),meta:{title:"数据结构算法"}}],["/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/",{loader:()=>n.e(5353).then(n.bind(n,7922)),meta:{title:"计算机基础"}}],["/category/",{loader:()=>n.e(3583).then(n.bind(n,3233)),meta:{title:"分类",index:!1}}],["/tag/",{loader:()=>n.e(1797).then(n.bind(n,951)),meta:{title:"标签",index:!1}}],["/tag/ai-gen/",{loader:()=>n.e(6539).then(n.bind(n,2231)),meta:{title:"标签: AI_GEN",index:!1}}],["/tag/stars/",{loader:()=>n.e(9115).then(n.bind(n,6479)),meta:{title:"标签: stars",index:!1}}],["/article/",{loader:()=>n.e(7511).then(n.bind(n,2772)),meta:{title:"文章",index:!1}}],["/star/",{loader:()=>n.e(7199).then(n.bind(n,353)),meta:{title:"星标",index:!1}}],["/timeline/",{loader:()=>n.e(5464).then(n.bind(n,4695)),meta:{title:"时间轴",index:!1}}]])},8761:(e,t,n)=>{n.d(t,{U:()=>l});const l=JSON.parse('{"base":"/","lang":"zh-CN","title":"Runner2011 blog","description":"Runner2011的 blog","head":[],"locales":{}}')}},e=>{e.O(0,[2533,1573],(()=>e(e.s=8731))),e.O()}]);