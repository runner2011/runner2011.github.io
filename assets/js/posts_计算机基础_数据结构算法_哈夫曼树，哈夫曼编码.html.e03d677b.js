"use strict";(self.webpackChunkrunn2011blog=self.webpackChunkrunn2011blog||[]).push([[4787],{6262:(e,t)=>{t.A=(e,t)=>{const n=e.__vccOpts||e;for(const[e,a]of t)n[e]=a;return n}},6456:(e,t,n)=>{n.r(t),n.d(t,{comp:()=>p,data:()=>o});var a=n(641);const r={},p=(0,n(6262).A)(r,[["render",function(e,t){return(0,a.uX)(),(0,a.CE)("div",null,t[0]||(t[0]=[(0,a.Fv)('<h1 id="哈夫曼树-哈夫曼编码" tabindex="-1"><a class="header-anchor" href="#哈夫曼树-哈夫曼编码"><span>哈夫曼树，哈夫曼编码</span></a></h1><p>哈夫曼编码：熵编码</p><h1 id="前情" tabindex="-1"><a class="header-anchor" href="#前情"><span>前情：</span></a></h1><p>熵：有序，熵低，无序，熵高。熵低，信息量更少，更容易表示，熵高，信息量高，更难表示。</p><h1 id="核心" tabindex="-1"><a class="header-anchor" href="#核心"><span>核心：</span></a></h1><p>1.计算熵（计算高频，低频）。高频，用短编码表示，低频，长编码表示。</p><p>2.根据熵信息，编码。</p><h1 id="todo" tabindex="-1"><a class="header-anchor" href="#todo"><span>TODO</span></a></h1><h2 id="哈夫曼树生成规则" tabindex="-1"><a class="header-anchor" href="#哈夫曼树生成规则"><span>哈夫曼树生成规则？</span></a></h2>',9)]))}]]),o=JSON.parse('{"path":"/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%EF%BC%8C%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81.html","title":"哈夫曼树，哈夫曼编码","lang":"zh-CN","frontmatter":{"tag":["AI_GEN"],"description":"哈夫曼树，哈夫曼编码 哈夫曼编码：熵编码 前情： 熵：有序，熵低，无序，熵高。熵低，信息量更少，更容易表示，熵高，信息量高，更难表示。 核心： 1.计算熵（计算高频，低频）。高频，用短编码表示，低频，长编码表示。 2.根据熵信息，编码。 TODO 哈夫曼树生成规则？","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"哈夫曼树，哈夫曼编码\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-08T03:01:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Runner2011\\",\\"url\\":\\"https://runner2011.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://runner2011.github.io/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%EF%BC%8C%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81.html"}],["meta",{"property":"og:site_name","content":"Runner2011 blog"}],["meta",{"property":"og:title","content":"哈夫曼树，哈夫曼编码"}],["meta",{"property":"og:description","content":"哈夫曼树，哈夫曼编码 哈夫曼编码：熵编码 前情： 熵：有序，熵低，无序，熵高。熵低，信息量更少，更容易表示，熵高，信息量高，更难表示。 核心： 1.计算熵（计算高频，低频）。高频，用短编码表示，低频，长编码表示。 2.根据熵信息，编码。 TODO 哈夫曼树生成规则？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-08T03:01:22.000Z"}],["meta",{"property":"article:tag","content":"AI_GEN"}],["meta",{"property":"article:modified_time","content":"2025-06-08T03:01:22.000Z"}]]},"git":{"createdTime":1749351682000,"updatedTime":1749351682000,"contributors":[{"name":"Runner2011","username":"Runner2011","email":"chenjfsea@gmail.com","commits":1,"url":"https://github.com/Runner2011"}]},"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"posts/计算机基础/数据结构算法/哈夫曼树，哈夫曼编码.md","excerpt":"\\n<p>哈夫曼编码：熵编码</p>\\n<h1>前情：</h1>\\n<p>熵：有序，熵低，无序，熵高。熵低，信息量更少，更容易表示，熵高，信息量高，更难表示。</p>\\n<h1>核心：</h1>\\n<p>1.计算熵（计算高频，低频）。高频，用短编码表示，低频，长编码表示。</p>\\n<p>2.根据熵信息，编码。</p>\\n<h1>TODO</h1>\\n<h2>哈夫曼树生成规则？</h2>\\n","autoDesc":true}')}}]);