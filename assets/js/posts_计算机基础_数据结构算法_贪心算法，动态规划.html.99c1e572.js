"use strict";(self.webpackChunkrunn2011blog=self.webpackChunkrunn2011blog||[]).push([[5363],{628:(t,e)=>{e.A=(t,e)=>{const n=t.__vccOpts||t;for(const[t,l]of e)n[t]=l;return n}},1196:(t,e,n)=>{n.r(e),n.d(e,{comp:()=>r,data:()=>d});var l=n(8178);const o={},r=(0,n(628).A)(o,[["render",function(t,e){return(0,l.uX)(),(0,l.CE)("div",null,e[0]||(e[0]=[(0,l.Fv)('<h1 id="贪心算法-动态规划" tabindex="-1"><a class="header-anchor" href="#贪心算法-动态规划"><span>贪心算法，动态规划</span></a></h1><ul><li><strong>贪心算法</strong>：像一个人爬山，每次都选最陡的路，可能错过真正的顶峰。</li><li><strong>动态规划</strong>：像一群人分头探索所有路径，最后汇总最优路线</li></ul><p>动态规划：计算每一个子问题，并记录子问题的结果</p><p>贪心算法：每次取最解决的结果，一条路走到黑</p><h1 id="性能" tabindex="-1"><a class="header-anchor" href="#性能"><span>性能</span></a></h1><table><thead><tr><th style="text-align:left;">维度</th><th style="text-align:left;">贪心算法</th><th style="text-align:left;">动态规划</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>时间效率</strong></td><td style="text-align:left;">快（<code>O(amount)</code>）</td><td style="text-align:left;">慢（<code>O(amount × coin_types)</code>）</td></tr><tr><td style="text-align:left;"><strong>空间效率</strong></td><td style="text-align:left;">低（<code>O(1)</code>）</td><td style="text-align:left;">高（<code>O(amount)</code>）</td></tr><tr><td style="text-align:left;"><strong>解的质量</strong></td><td style="text-align:left;">可能非最优（如 <code>4,1,1</code>）</td><td style="text-align:left;">保证最优（如 <code>3,3</code>）</td></tr><tr><td style="text-align:left;"><strong>适用场景</strong></td><td style="text-align:left;">问题满足贪心性质时</td><td style="text-align:left;">通用性强，但需要更多计算</td></tr></tbody></table>',6)]))}]]),d=JSON.parse('{"path":"/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%EF%BC%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html","title":"贪心算法，动态规划","lang":"zh-CN","frontmatter":{"tag":["AI_GEN"],"description":"贪心算法，动态规划 贪心算法：像一个人爬山，每次都选最陡的路，可能错过真正的顶峰。 动态规划：像一群人分头探索所有路径，最后汇总最优路线 动态规划：计算每一个子问题，并记录子问题的结果 贪心算法：每次取最解决的结果，一条路走到黑 性能","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"贪心算法，动态规划\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-08T03:01:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Runner2011\\",\\"url\\":\\"https://runner2011.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://runner2011.github.io/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%EF%BC%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html"}],["meta",{"property":"og:site_name","content":"Runner2011 blog"}],["meta",{"property":"og:title","content":"贪心算法，动态规划"}],["meta",{"property":"og:description","content":"贪心算法，动态规划 贪心算法：像一个人爬山，每次都选最陡的路，可能错过真正的顶峰。 动态规划：像一群人分头探索所有路径，最后汇总最优路线 动态规划：计算每一个子问题，并记录子问题的结果 贪心算法：每次取最解决的结果，一条路走到黑 性能"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-08T03:01:22.000Z"}],["meta",{"property":"article:tag","content":"AI_GEN"}],["meta",{"property":"article:modified_time","content":"2025-06-08T03:01:22.000Z"}]]},"git":{"createdTime":1749351682000,"updatedTime":1749351682000,"contributors":[{"name":"Runner2011","username":"Runner2011","email":"chenjfsea@gmail.com","commits":1,"url":"https://github.com/Runner2011"}]},"readingTime":{"minutes":0.6,"words":179},"filePathRelative":"posts/计算机基础/数据结构算法/贪心算法，动态规划.md","excerpt":"\\n<ul>\\n<li><strong>贪心算法</strong>：像一个人爬山，每次都选最陡的路，可能错过真正的顶峰。</li>\\n<li><strong>动态规划</strong>：像一群人分头探索所有路径，最后汇总最优路线</li>\\n</ul>\\n<p>动态规划：计算每一个子问题，并记录子问题的结果</p>\\n<p>贪心算法：每次取最解决的结果，一条路走到黑</p>\\n<h1>性能</h1>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">维度</th>\\n<th style=\\"text-align:left\\">贪心算法</th>\\n<th style=\\"text-align:left\\">动态规划</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>时间效率</strong></td>\\n<td style=\\"text-align:left\\">快（<code>O(amount)</code>）</td>\\n<td style=\\"text-align:left\\">慢（<code>O(amount × coin_types)</code>）</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>空间效率</strong></td>\\n<td style=\\"text-align:left\\">低（<code>O(1)</code>）</td>\\n<td style=\\"text-align:left\\">高（<code>O(amount)</code>）</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>解的质量</strong></td>\\n<td style=\\"text-align:left\\">可能非最优（如&nbsp;<code>4,1,1</code>）</td>\\n<td style=\\"text-align:left\\">保证最优（如&nbsp;<code>3,3</code>）</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>适用场景</strong></td>\\n<td style=\\"text-align:left\\">问题满足贪心性质时</td>\\n<td style=\\"text-align:left\\">通用性强，但需要更多计算</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}')}}]);